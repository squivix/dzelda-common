{
  "openapi": "3.1.0",
  "x-stoplight": {
    "id": "64dpjoe1w4irj"
  },
  "info": {
    "title": "dzelda-api",
    "version": "1.0",
    "description": "",
    "summary": "The backend API for Dzelda: a free and open source language learning website."
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Related to the user resource."
    },
    {
      "name": "auth",
      "description": "Related to authentication: sign up, login, password reset, etc."
    },
    {
      "name": "language",
      "description": "Related to the language resource."
    },
    {
      "name": "course",
      "description": "Related to the course resource."
    },
    {
      "name": "lesson",
      "description": "Related to the lesson resource."
    },
    {
      "name": "vocab",
      "description": "Related to the vocab resource."
    },
    {
      "name": "meaning",
      "description": "Related to the meaning resource."
    },
    {
      "name": "dictionary",
      "description": "Related to the dictionary resource."
    }
  ],
  "paths": {
    "/users/": {
      "post": {
        "summary": "Sign Up",
        "operationId": "post-users",
        "responses": {
          "201": {
            "description": "Created\n\nA new user is created and returned. If `initialLanguage` is supplied, that language is added to the languages the user is learning.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "Create a new user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 20,
                    "pattern": "^[A-Za-z0-9]*$"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "format": "password"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": [
                  "username",
                  "password",
                  "email"
                ]
              }
            }
          },
          "description": ""
        },
        "security": [],
        "tags": [
          "auth",
          "user"
        ]
      }
    },
    "/users/{username}/": {
      "parameters": [
        {
          "$ref": "#/components/parameters/username"
        }
      ],
      "get": {
        "summary": "Get User",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "OK\n\nReturns user info if user is logged in and username is \"me\" or if it belongs to the currently logged in user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-users-username",
        "description": "Get user details, including profile."
      }
    },
    "/users/me/email/confirm/": {
      "post": {
        "summary": "Confirm Email",
        "operationId": "post-users-me-email-confirm",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          },
          "description": ""
        },
        "security": []
      },
      "parameters": []
    },
    "/users/me/password/reset/": {
      "post": {
        "summary": "Reset Password",
        "operationId": "post-users-me-password-reset",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string",
                    "minLength": 8,
                    "format": "password"
                  }
                },
                "required": [
                  "token",
                  "newPassword"
                ]
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/users/me/email/": {
      "put": {
        "summary": "Change User Email",
        "operationId": "put-users-me-email",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newEmail": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": [
                  "newEmail"
                ]
              }
            }
          }
        },
        "description": ""
      }
    },
    "/users/me/password/": {
      "put": {
        "summary": "Change Password",
        "operationId": "put-users-me-password",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          }
        },
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string",
                    "minLength": 8
                  }
                },
                "required": [
                  "oldPassword",
                  "newPassword"
                ]
              }
            }
          },
          "description": ""
        }
      }
    },
    "/sessions/": {
      "post": {
        "summary": "Login",
        "operationId": "post-sessions",
        "responses": {
          "200": {
            "description": "OK\n\nUser is logged in. Returns authentication token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authToken": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "authToken"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          }
        },
        "description": "Authenticate the user",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 20,
                    "pattern": "^[A-Za-z0-9]*$"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "format": "password"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          },
          "description": ""
        },
        "tags": [
          "auth"
        ]
      },
      "delete": {
        "summary": "Log Out",
        "operationId": "delete-sessions",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "description": ""
      }
    },
    "/users/me/": {
      "delete": {
        "summary": "Delete Account",
        "operationId": "delete-users-me",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Delete account of currently logged in user, and everything associated with it. This action cannot be undone."
      }
    },
    "/users/me/profile/": {
      "put": {
        "summary": "Update User Profile",
        "operationId": "put-users-me-profile",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "413": {
            "$ref": "#/components/responses/RequestTooLarge"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bio": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "profilePicture": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "bio"
                ]
              }
            }
          },
          "description": ""
        },
        "description": ""
      }
    },
    "/languages/": {
      "get": {
        "summary": "Get Languages",
        "tags": [
          "language"
        ],
        "responses": {
          "200": {
            "description": "OK\n\nReturns a list of languages that match query.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Language"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "operationId": "get-languages",
        "description": "Get a list of languages",
        "parameters": [
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "isSupported"
          }
        ],
        "security": []
      }
    },
    "/courses/": {
      "get": {
        "summary": "Get Courses",
        "tags": [
          "course"
        ],
        "responses": {
          "200": {
            "description": "OK\n\nReturns a list of courses that match query. If the user is logged in `vocabLevels` are appended to eaech of them to show how many vocabs of each level the course has.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "pageSize": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 100
                    },
                    "pageCount": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Course"
                      }
                    }
                  },
                  "required": [
                    "page",
                    "pageSize",
                    "pageCount",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          }
        },
        "operationId": "get-courses",
        "description": "Get list of courses",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 4
            },
            "in": "query",
            "name": "languageCode"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 20
            },
            "in": "query",
            "name": "addedBy"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "searchQuery"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "title",
                "createdDate",
                "avgPastViewersCountPerLesson"
              ],
              "default": "title"
            },
            "in": "query",
            "name": "sortBy"
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "in": "query",
            "name": "pageSize"
          },
          {
            "$ref": "#/components/parameters/languageLevel"
          }
        ],
        "security": []
      },
      "post": {
        "summary": "Create Course",
        "operationId": "post-courses",
        "responses": {
          "201": {
            "description": "Created\n\nA new course is created and returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course",
                  "x-examples": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "languageCode": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "isPublic": {
                    "type": "boolean"
                  },
                  "level": {
                    "$ref": "#/components/schemas/LanguageLevel"
                  },
                  "image": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "languageCode",
                  "title"
                ]
              }
            }
          },
          "description": ""
        },
        "description": "Create a new course.",
        "tags": [
          "course"
        ]
      }
    },
    "/courses/{courseId}/": {
      "parameters": [
        {
          "schema": {
            "type": "number"
          },
          "name": "courseId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Course",
        "tags": [
          "course"
        ],
        "responses": {
          "200": {
            "description": "OK\n\nReturns the course with `courseId`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-courses-courseId",
        "description": "Get course details."
      },
      "put": {
        "summary": "Update Course",
        "operationId": "put-courses-courseId",
        "responses": {
          "200": {
            "description": "OK\n\nUpdates the course and returns it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "413": {
            "$ref": "#/components/responses/RequestTooLarge"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          }
        },
        "description": "Update course details.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "uri"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "isPublic": {
                    "type": "boolean"
                  },
                  "lessonsOrder": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": [
                  "title",
                  "description",
                  "isPublic",
                  "lessonsOrder"
                ]
              }
            }
          }
        },
        "tags": [
          "course"
        ]
      },
      "delete": {
        "summary": "Delete Course",
        "operationId": "delete-courses-courseId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/lessons/": {
      "get": {
        "summary": "Get Lessons",
        "tags": [
          "lesson"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "pageSize": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 100
                    },
                    "pageCount": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Lesson"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "operationId": "get-lessons",
        "description": "Get a list of lessons",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 4
            },
            "in": "query",
            "name": "languageCode"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "searchQuery"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 20
            },
            "in": "query",
            "name": "addedBy"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "hasAudio"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "title",
                "createdDate",
                "pastViewersCount"
              ],
              "default": "title"
            },
            "in": "query",
            "name": "sortBy"
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "in": "query",
            "name": "pageSize"
          }
        ]
      },
      "post": {
        "summary": "Create Lesson",
        "operationId": "post-lessons",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lesson"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "413": {
            "$ref": "#/components/responses/RequestTooLarge"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          }
        },
        "description": "Create a new lesson.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "text": {
                    "type": "string"
                  },
                  "languageCode": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "v2gz6y60qop7w"
                    }
                  },
                  "courseId": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "isPublic": {
                    "type": "boolean",
                    "x-stoplight": {
                      "id": "5p6xks3m4p6vi"
                    }
                  },
                  "level": {
                    "$ref": "#/components/schemas/LanguageLevel",
                    "x-stoplight": {
                      "id": "96yjpr3ju95f1"
                    }
                  },
                  "image": {
                    "type": "string",
                    "format": "uri"
                  },
                  "audio": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "title",
                  "text",
                  "languageCode"
                ]
              }
            }
          }
        },
        "tags": [
          "lesson"
        ]
      }
    },
    "/lessons/{lessonId}/": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "lessonId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Lesson",
        "tags": [
          "lesson"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lesson"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-lessons-lessonId",
        "description": "Get lesson details."
      },
      "patch": {
        "summary": "Update Lesson",
        "operationId": "patch-lessons-lessonId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lesson"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {},
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "uri"
                  },
                  "audio": {
                    "type": "string",
                    "format": "uri"
                  },
                  "courseId": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "title": {
                    "type": "string"
                  },
                  "text": {
                    "type": "string"
                  },
                  "level": {
                    "$ref": "#/components/schemas/LanguageLevel"
                  }
                },
                "required": [
                  "courseId",
                  "title",
                  "text"
                ]
              }
            }
          },
          "description": ""
        },
        "tags": [
          "lesson"
        ],
        "description": "Update lesson details."
      },
      "delete": {
        "summary": "Delete Lesson",
        "operationId": "delete-lessons-lessonId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/vocabs/": {
      "post": {
        "summary": "Create Vocab",
        "operationId": "post-vocabs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vocab"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vocab"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {},
                "properties": {
                  "languageCode": {
                    "type": "string"
                  },
                  "text": {
                    "type": "string"
                  },
                  "isPhrase": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "vocab"
        ],
        "description": "Create new vocab."
      },
      "get": {
        "summary": "Get Vocabs",
        "operationId": "get-vocabs",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "languageCode"
          },
          {
            "$ref": "#/components/parameters/vocabLevel"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "searchQuery"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "text",
                "lessonsCount",
                "learnersCount"
              ],
              "default": "text"
            },
            "in": "query",
            "name": "sortBy"
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 25
            },
            "in": "query",
            "name": "pageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "pageSize": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "pageCount": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LearnerVocab"
                      }
                    }
                  },
                  "required": [
                    "page",
                    "pageSize",
                    "pageCount",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "Get list of saved all vocabs.",
        "security": []
      }
    },
    "/meanings/": {
      "post": {
        "summary": "Create Meaning",
        "operationId": "post-meanings",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meaning"
                },
                "examples": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string"
                  },
                  "vocabId": {
                    "type": "integer"
                  },
                  "languageCode": {
                    "type": "string"
                  }
                },
                "x-examples": {}
              }
            }
          },
          "description": ""
        },
        "description": "Create a new meaning.",
        "tags": [
          "meaning"
        ]
      }
    },
    "/dictionaries/": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dictionary"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-dictionaries",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "languageCode"
          }
        ]
      }
    },
    "/users/{username}/languages/": {
      "parameters": [
        {
          "$ref": "#/components/parameters/username"
        }
      ],
      "get": {
        "summary": "Get User Languages",
        "tags": [
          "language"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearnerLanguage"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-users-username-languages",
        "description": "Get a list of langauges the user is learning.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "learnersCount",
                "lastOpened"
              ],
              "default": "name"
            },
            "in": "query",
            "name": "sortBy"
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          }
        ],
        "x-extension-1": null
      }
    },
    "/users/me/languages/": {
      "post": {
        "summary": "Add Language To User",
        "operationId": "post-users-username-languages",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "description": "Add a language to languages the user is learning.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {},
                "properties": {
                  "languageCode": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "language"
        ]
      }
    },
    "/users/me/languages/{languageCode}/": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "languageCode",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "Update User Language",
        "operationId": "patch-users-me-languages-languageCode",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "description": "Updates user language last time opneed timestamp.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {},
                "properties": {
                  "lastOpened": {
                    "type": "string",
                    "enum": [
                      "now"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "language"
        ]
      },
      "delete": {
        "summary": "Delete Language From User",
        "operationId": "delete-users-me-languages-languageCode",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "description": "Remove a language from list of languages the user is learning.",
        "tags": [
          "language"
        ]
      }
    },
    "/users/me/languages/{languageCode}/progress/": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "languageCode",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "summary": "Reset Language Progress",
        "operationId": "delete-users-me-languages-languageCode-progress",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "description": ""
      }
    },
    "/users/me/courses/bookmarked/": {
      "parameters": [],
      "get": {
        "summary": "Get User Courses Bookmarked",
        "tags": [
          "course"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "pageSize": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "pageCount": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Course"
                      }
                    }
                  },
                  "required": [
                    "page",
                    "pageSize",
                    "pageCount",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-users-me-courses-bookmarked",
        "description": "Get the list of courses the user has bookmarked.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 4
            },
            "in": "query",
            "name": "language"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 20
            },
            "in": "query",
            "name": "addedBy"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "searchQuery"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "in": "query",
            "name": "pageSize"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "title",
                "createdDate",
                "avgPastViewersCountPerLesson"
              ],
              "default": "title"
            },
            "in": "query",
            "name": "sortBy"
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/languageLevel"
          }
        ]
      },
      "post": {
        "summary": "Add Courses to User Bookmarks",
        "operationId": "post-users-me-courses-bookmarked",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          }
        },
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "courseId": {
                    "type": "integer",
                    "minimum": 0
                  }
                },
                "required": [
                  "courseId"
                ]
              }
            }
          }
        }
      }
    },
    "/users/me/courses/bookmarked/{courseId}/": {
      "parameters": [
        {
          "schema": {
            "type": "number",
            "minimum": 0
          },
          "name": "courseId",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "summary": "Remove Course from User Bookmarks",
        "operationId": "delete-users-me-courses-bookmarked-courseId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "description": ""
      }
    },
    "/users/me/lessons/history/": {
      "parameters": [],
      "get": {
        "summary": "Get User Lessons History",
        "tags": [
          "lesson"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "pageSize": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 100
                    },
                    "pageCount": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Lesson"
                      }
                    }
                  },
                  "required": [
                    "page",
                    "pageSize",
                    "pageCount",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-users-me-lessons-history",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 4
            },
            "in": "query",
            "name": "language"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "searchQuery"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 20
            },
            "in": "query",
            "name": "addedBy"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "hasAudio"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "in": "query",
            "name": "pageSize"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "title",
                "createdDate",
                "pastViewersCount"
              ],
              "default": "title"
            },
            "in": "query",
            "name": "sortBy"
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          }
        ],
        "description": "Get the list of lessons the user has viewed."
      },
      "post": {
        "summary": "Add Lesson To User History",
        "operationId": "post-users-me-lessons-history",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lesson"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lesson"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lessonId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "lesson"
        ],
        "description": "Add a lesson to user lesson history"
      }
    },
    "/users/me/vocabs/": {
      "parameters": [],
      "get": {
        "summary": "Get User Vocabs",
        "tags": [
          "vocab"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "pageSize": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 100
                    },
                    "pageCount": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LearnerVocab"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "operationId": "get-users-me-vocabs",
        "description": "Get list of saved user vocabs.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "languageCode"
          },
          {
            "$ref": "#/components/parameters/vocabLevel"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "searchQuery"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 10
            },
            "in": "query",
            "name": "pageSize"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "text",
                "lessonsCount",
                "learnersCount"
              ],
              "default": "text"
            },
            "in": "query",
            "name": "sortBy"
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          }
        ]
      },
      "post": {
        "summary": "Add Vocab To User",
        "operationId": "post-users-me-vocabs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearnerVocab"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearnerVocab"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vocabId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/me/vocabs/{vocabId}/": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "vocabId",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "Update User Vocab",
        "operationId": "patch-users-me-vocabs-vocabId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearnerVocab"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "level": {
                    "type": "integer",
                    "enum": [
                      -1,
                      0,
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ]
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "vocab"
        ],
        "description": "Update user saved vocab details (level, notes). "
      },
      "get": {
        "summary": "Get User Vocab",
        "operationId": "get-users-me-vocabs-vocabId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearnerVocab"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "tags": [
          "vocab"
        ],
        "description": "Get user vocab details."
      },
      "delete": {
        "summary": "Delete User Vocab",
        "operationId": "delete-users-me-vocabs-vocabId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "description": ""
      }
    },
    "/users/me/meanings/": {
      "parameters": [],
      "get": {
        "summary": "Get User Meanings",
        "tags": [
          "meaning"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Meaning"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "operationId": "get-users-me-meanings",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "vocabId"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "text",
                "learnersCount"
              ],
              "default": "text"
            },
            "in": "query",
            "name": "sortBy"
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          }
        ],
        "description": "Get a list of saved user meanings."
      },
      "post": {
        "summary": "Add Meaning To User",
        "operationId": "post-users-me-meanings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meaning"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meaning"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "meaningId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "meaning"
        ],
        "description": "Adds a meaning to the saved user meanings."
      }
    },
    "/users/me/meanings/{meaningId}/": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "meaningId",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "summary": "Remove Meaning From User",
        "operationId": "delete-users-me-meanings-meaningId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "description": "Removes meaning from list of saved user meanings.",
        "tags": [
          "meaning"
        ]
      }
    },
    "/lessons/{lessonId}/vocabs/": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "lessonId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Lesson Vocabs",
        "tags": [
          "vocab"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearnerVocab"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-lessons-lessonId-vocabs",
        "parameters": [],
        "description": "Get a list of vocabs in a lesson."
      }
    },
    "/users/me/dictionaries/": {
      "parameters": [],
      "get": {
        "summary": "Get User Dictionaries",
        "tags": [
          "dictionary"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dictionary"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-users-me-dictionaries",
        "description": "Gets a list of user dictionaries.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "languageCode"
          }
        ]
      }
    },
    "/password-reset-tokens/": {
      "post": {
        "summary": "Request Password Reset Token",
        "operationId": "post-password-reset-tokens",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Request a password reset token is created and sent to user email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "maxLength": 256,
                    "format": "email"
                  }
                },
                "required": [
                  "username",
                  "email"
                ]
              }
            }
          }
        }
      }
    },
    "/password-reset-tokens/verify/": {
      "post": {
        "summary": "Validate Password Reset Token",
        "operationId": "post-password-reset-tokens-verify",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          }
        },
        "description": "Validates password reset token, returns 204 if it's valid, 401 otherwise.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          },
          "description": ""
        }
      },
      "parameters": []
    },
    "/email-confirm-tokens/": {
      "post": {
        "summary": "Request Email Confirm Token",
        "operationId": "post-email-confirm-tokens",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          }
        },
        "description": "Requests an email reset token to be sent to user email. Used for resending confirmation email. Can optionally change email from sign up.\n\nIf user email is already confirmed return 400.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          },
          "description": ""
        }
      },
      "parameters": []
    },
    "/users/{username}/vocabs/saved/count/": {
      "get": {
        "summary": "Get User Saved Vocabs Count",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "vocabsCount": {
                        "type": "integer"
                      },
                      "language": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "vocabsCount"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-users-username-vocabs-saved-count",
        "description": "Get a count of vocabs saved by a user, optionally grouped by language",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "savedOnFrom"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "savedOnTo"
          },
          {
            "$ref": "#/components/parameters/vocabLevel"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "isPhrase"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "language"
              ]
            },
            "in": "query",
            "name": "groupBy"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/username"
        }
      ]
    },
    "/users/{username}/vocabs/saved/count/time-series/": {
      "parameters": [
        {
          "$ref": "#/components/parameters/username"
        }
      ],
      "get": {
        "summary": "Get Saved Vocabs Count Time Series",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "vocabsCount": {
                        "type": "integer"
                      },
                      "language": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string",
                        "format": "date"
                      }
                    },
                    "required": [
                      "vocabsCount"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-users-username-vocabs-saved-count-time-series",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date",
              "default": "1970-01-01"
            },
            "in": "query",
            "name": "savedOnFrom"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "savedOnTo"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "day",
                "month",
                "year"
              ]
            },
            "in": "query",
            "name": "savedOnInterval"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "language"
              ]
            },
            "in": "query",
            "name": "groupBy"
          },
          {
            "$ref": "#/components/parameters/vocabLevel"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "isPhrase"
          }
        ],
        "description": "Get a count of vocabs saved by a user every `savedOnInterval` between `savedOnFrom` and `savedOnTo`, optionally grouped by language"
      }
    },
    "/courses/{courseId}/lessons/{lessonId}/next/": {
      "parameters": [
        {
          "schema": {
            "type": "number"
          },
          "name": "courseId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "number"
          },
          "name": "lessonId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Next Lesson In Course",
        "tags": [],
        "responses": {
          "303": {
            "description": "See Other",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-courses-courseId-lessons-lessonId-next",
        "description": "Redirects to next lesson in course or 404 if not found",
        "parameters": []
      }
    },
    "/file-upload-requests/": {
      "post": {
        "summary": "Request presigned file upload url",
        "operationId": "post-file-upload-request",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uploadUrl": {
                      "type": "string",
                      "format": "uri"
                    },
                    "uploadFormFields": {
                      "type": "object"
                    },
                    "objectKey": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "uploadUrl",
                    "uploadFormFields",
                    "objectKey"
                  ]
                }
              }
            }
          }
        },
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileField": {
                    "type": "string"
                  },
                  "fileExtension": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 20
                  }
                },
                "required": [
                  "fileField",
                  "fileExtension"
                ]
              }
            }
          }
        }
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "x-examples": {},
        "x-stoplight": {
          "id": "e6b459c238b81"
        },
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 20,
            "minLength": 4,
            "pattern": "^[A-Za-z0-9]*$"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "isEmailConfirmed": {
            "type": "boolean",
            "readOnly": true
          },
          "isPendingEmailChange": {
            "type": "boolean"
          },
          "profile": {
            "$ref": "#/components/schemas/Profile"
          }
        },
        "required": [
          "username",
          "profile"
        ]
      },
      "Profile": {
        "type": "object",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "languagesLearning": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Language"
            }
          },
          "profilePicture": {
            "type": "string",
            "format": "uri"
          },
          "bio": {
            "type": "string"
          },
          "isPublic": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "username",
          "languagesLearning",
          "profilePicture",
          "bio",
          "isPublic"
        ]
      },
      "Language": {
        "type": "object",
        "x-examples": {},
        "examples": [],
        "properties": {
          "id": {
            "type": "integer"
          },
          "code": {
            "type": "string",
            "maxLength": 4,
            "minLength": 2
          },
          "name": {
            "type": "string"
          },
          "greeting": {
            "type": "string"
          },
          "flag": {
            "type": [
              "string",
              "null"
            ],
            "format": "uri"
          },
          "flagCircular": {
            "type": [
              "string",
              "null"
            ],
            "format": "uri"
          },
          "flagEmoji": {
            "type": [
              "string",
              "null"
            ]
          },
          "isSupported": {
            "type": "boolean"
          },
          "levelThresholds": {
            "type": "object",
            "required": [
              "beginner1",
              "beginner2",
              "intermediate1",
              "intermediate2",
              "advanced1",
              "advanced2"
            ],
            "properties": {
              "beginner1": {
                "type": "integer"
              },
              "beginner2": {
                "type": "integer"
              },
              "intermediate1": {
                "type": "integer"
              },
              "intermediate2": {
                "type": "integer"
              },
              "advanced1": {
                "type": "integer"
              },
              "advanced2": {
                "type": "integer"
              }
            }
          },
          "learnersCount": {
            "type": "integer"
          },
          "color": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "greeting",
          "flag",
          "flagCircular",
          "flagEmoji",
          "isSupported",
          "levelThresholds",
          "learnersCount",
          "color"
        ]
      },
      "Course": {
        "type": "object",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image": {
            "type": "string",
            "format": "uri"
          },
          "language": {
            "type": "string"
          },
          "addedBy": {
            "type": "string"
          },
          "addedOn": {
            "type": "string",
            "format": "date-time"
          },
          "lessons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Lesson"
            }
          },
          "vocabsByLevel": {
            "$ref": "#/components/schemas/VocabsByLevel"
          },
          "isBookmarked": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "title",
          "description",
          "image",
          "language",
          "addedBy",
          "addedOn",
          "lessons"
        ]
      },
      "Lesson": {
        "x-stoplight": {
          "id": "c1739f3034b3f"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "audio": {
            "type": "string",
            "format": "uri"
          },
          "image": {
            "type": "string",
            "format": "uri"
          },
          "course": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Course",
                "x-stoplight": {
                  "id": "03rfridv70yml"
                }
              },
              {
                "x-stoplight": {
                  "id": "and8la5qpn5q5"
                },
                "type": [
                  "null"
                ]
              }
            ]
          },
          "orderInCourse": {
            "type": "integer"
          },
          "isLastInCourse": {
            "type": "boolean"
          },
          "addedOn": {
            "type": "string",
            "format": "date-time"
          },
          "learnersCount": {
            "type": "number"
          },
          "vocabsByLevel": {
            "$ref": "#/components/schemas/VocabsByLevel"
          },
          "parsedTitle": {
            "type": [
              "string",
              "null"
            ]
          },
          "parsedText": {
            "type": [
              "string",
              "null"
            ]
          },
          "isPublic": {
            "type": "boolean"
          },
          "addedBy": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "level": {
            "$ref": "#/components/schemas/LanguageLevel",
            "x-stoplight": {
              "id": "5aub6402pomvv"
            }
          }
        },
        "required": [
          "id",
          "title",
          "text",
          "audio",
          "image",
          "course",
          "addedOn",
          "learnersCount",
          "parsedTitle",
          "parsedText",
          "isPublic",
          "addedBy",
          "language"
        ],
        "title": ""
      },
      "Vocab": {
        "type": "object",
        "x-examples": {},
        "x-stoplight": {
          "id": "9926af812414a"
        },
        "properties": {
          "id": {
            "type": "integer"
          },
          "text": {
            "type": "string"
          },
          "isPhrase": {
            "type": "boolean"
          },
          "language": {
            "type": "string"
          },
          "meanings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Meaning"
            }
          },
          "learnersCount": {
            "type": "number",
            "minimum": 0
          },
          "lessonsCount": {
            "type": "number",
            "minimum": 0
          }
        },
        "required": [
          "id",
          "text",
          "isPhrase",
          "language",
          "meanings",
          "learnersCount",
          "lessonsCount"
        ]
      },
      "Meaning": {
        "type": "object",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "integer"
          },
          "text": {
            "type": "string"
          },
          "vocab": {
            "$ref": "#/components/schemas/Vocab"
          },
          "learnersCount": {
            "type": "integer"
          },
          "addedBy": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "addedOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "text",
          "vocab",
          "learnersCount",
          "addedBy",
          "language",
          "addedOn"
        ]
      },
      "Dictionary": {
        "type": "object",
        "x-examples": {
          "Example 1": {
            "id": 1,
            "name": "Google Translate",
            "link": "translate.google.com",
            "language": "en"
          }
        },
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "lookupLink": {
            "type": "string"
          },
          "dictionaryLink": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "lookupLink",
          "dictionaryLink",
          "language"
        ]
      },
      "LearnerVocab": {
        "title": "LearnerVocab",
        "x-stoplight": {
          "id": "p48qo2qk9eg2o"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "text": {
            "type": "string"
          },
          "isPhrase": {
            "type": "boolean"
          },
          "level": {
            "$ref": "#/components/schemas/VocabLevel"
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "language": {
            "type": "string"
          },
          "meanings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Meaning"
            }
          },
          "learnerMeanings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Meaning"
            }
          }
        },
        "required": [
          "id",
          "text",
          "isPhrase",
          "level",
          "notes",
          "language",
          "meanings",
          "learnerMeanings"
        ]
      },
      "LearnerLanguage": {
        "title": "LearnerLanguage",
        "x-stoplight": {
          "id": "9ofn02r9zze9q"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "greeting": {
            "type": "string"
          },
          "flag": {
            "type": [
              "string",
              "null"
            ],
            "format": "uri"
          },
          "flagCircular": {
            "type": [
              "string",
              "null"
            ],
            "format": "uri"
          },
          "flagEmoji": {
            "type": [
              "string",
              "null"
            ],
            "format": "uri"
          },
          "isSupported": {
            "type": "boolean"
          },
          "levelThresholds": {
            "type": "object",
            "required": [
              "beginner1",
              "beginner2",
              "intermediate1",
              "intermediate2",
              "advanced1",
              "advanced2"
            ],
            "properties": {
              "beginner1": {
                "type": "integer"
              },
              "beginner2": {
                "type": "integer"
              },
              "intermediate1": {
                "type": "integer"
              },
              "intermediate2": {
                "type": "integer"
              },
              "advanced1": {
                "type": "integer"
              },
              "advanced2": {
                "type": "integer"
              }
            }
          },
          "learnersCount": {
            "type": "number"
          },
          "startedLearningOn": {
            "type": "string",
            "format": "date-time"
          },
          "lastOpened": {
            "type": "string",
            "format": "date-time"
          },
          "color": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "greeting",
          "flag",
          "flagCircular",
          "flagEmoji",
          "isSupported",
          "levelThresholds",
          "learnersCount",
          "startedLearningOn",
          "lastOpened",
          "color"
        ]
      },
      "VocabLevel": {
        "title": "VocabLevel",
        "type": "integer",
        "x-stoplight": {
          "id": "f20ba2c4c87c0"
        },
        "x-enumNames": [
          "IGNORED",
          "NEW",
          "LEVEL_1",
          "LEVEL_2",
          "LEVEL_3",
          "LEVEL_4",
          "LEARNED",
          "KNOWN"
        ],
        "enum": [
          -1,
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "examples": []
      },
      "LanguageLevel": {
        "title": "LanguageLevel",
        "type": "string",
        "x-stoplight": {
          "id": "1f0b394333520"
        },
        "x-enumNames": [
          "BEGINNER_1",
          "BEGINNER_2",
          "INTERMEDIATE_1",
          "INTERMEDIATE_2",
          "ADVANCED_1",
          "ADVANCED_2"
        ],
        "enum": [
          "beginner1",
          "beginner2",
          "intermediate1",
          "intermediate2",
          "advanced1",
          "advanced2"
        ]
      },
      "VocabsByLevel": {
        "title": "VocabsByLevel",
        "x-stoplight": {
          "id": "jcovucfx97c39"
        },
        "type": "object",
        "properties": {
          "0": {
            "type": "integer"
          },
          "1": {
            "type": "integer"
          },
          "2": {
            "type": "integer"
          },
          "3": {
            "type": "integer"
          },
          "4": {
            "type": "integer"
          },
          "5": {
            "type": "integer"
          },
          "-1": {
            "type": "integer"
          }
        },
        "required": [
          "0",
          "1",
          "2",
          "3",
          "4",
          "5",
          "-1"
        ]
      },
      "LessonHistoryEntry": {
        "title": "LessonHistoryEntry",
        "x-stoplight": {
          "id": "vycx1ccagq02j"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "audio": {
            "type": "string",
            "format": "uri"
          },
          "image": {
            "type": "string",
            "format": "uri"
          },
          "course": {
            "$ref": "#/components/schemas/Course"
          },
          "orderInCourse": {
            "type": "integer"
          },
          "isLastInCourse": {
            "type": "boolean"
          },
          "addedOn": {
            "type": "string",
            "format": "date-time"
          },
          "learnersCount": {
            "type": "number"
          },
          "vocabsByLevel": {
            "$ref": "#/components/schemas/VocabsByLevel"
          },
          "parsedTitle": {
            "type": [
              "string",
              "null"
            ]
          },
          "parsedText": {
            "type": [
              "string",
              "null"
            ]
          },
          "timeViewed": {
            "type": "string",
            "format": "date-time"
          },
          "pastViewer": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "title",
          "text",
          "audio",
          "image",
          "course",
          "orderInCourse",
          "isLastInCourse",
          "addedOn",
          "learnersCount",
          "parsedTitle",
          "parsedText",
          "timeViewed",
          "pastViewer"
        ]
      }
    },
    "securitySchemes": {
      "token": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "Unauthenticated": {
        "description": "User is not authenticated or invalid authentication credentials.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {},
              "properties": {
                "code": {
                  "type": "integer",
                  "enum": [
                    401
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "Unauthorized"
                  ]
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "status",
                "message",
                "details"
              ]
            },
            "examples": {}
          }
        },
        "headers": {}
      },
      "NotFound": {
        "description": "Resource not found.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "enum": [
                    404
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "Not Found"
                  ]
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "status",
                "message",
                "details"
              ]
            },
            "examples": {}
          }
        }
      },
      "Forbidden": {
        "description": "User is not allowed to perform this operation.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "code": 403,
                  "status": "Forbidden",
                  "message": "string",
                  "details": "string"
                }
              },
              "properties": {
                "code": {
                  "type": "integer",
                  "enum": [
                    403
                  ]
                },
                "status": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "status",
                "message",
                "details"
              ]
            },
            "examples": {}
          }
        },
        "headers": {}
      },
      "BadRequest": {
        "description": "Bad Request\n\nSome fields are invalid or required fields are missing.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "enum": [
                    400
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "Bad Request"
                  ]
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                },
                "fields": {
                  "type": "object",
                  "minProperties": 1
                }
              },
              "required": [
                "code",
                "status",
                "message",
                "details"
              ]
            }
          }
        }
      },
      "UnsupportedMediaType": {
        "description": "Unexpected media type or file mime type",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {},
              "properties": {
                "code": {
                  "type": "integer",
                  "enum": [
                    415
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "Unsupported Media Type"
                  ]
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                },
                "fields": {
                  "type": "object"
                }
              },
              "required": [
                "code",
                "status",
                "message",
                "details"
              ]
            },
            "examples": {}
          }
        }
      },
      "RequestTooLarge": {
        "description": "Uploaded files are too large.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {},
              "properties": {
                "code": {
                  "type": "integer",
                  "enum": [
                    413
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "Unsupported Media Type"
                  ]
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                },
                "fields": {
                  "type": "object"
                }
              },
              "required": [
                "code",
                "status",
                "message",
                "details"
              ]
            },
            "examples": {}
          }
        }
      }
    },
    "parameters": {
      "username": {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^[A-Za-z0-9]*$",
          "maxLength": 20
        }
      },
      "vocabLevel": {
        "name": "level",
        "in": "query",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/VocabLevel"
          }
        },
        "explode": true
      },
      "sortOrder": {
        "name": "sortOrder",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "asc"
        }
      },
      "languageLevel": {
        "name": "level",
        "in": "query",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/LanguageLevel"
          }
        }
      },
      "page": {
        "name": "page",
        "in": "query",
        "required": false,
        "schema": {
          "type": "number"
        }
      }
    }
  },
  "security": [
    {
      "token": []
    }
  ]
}
